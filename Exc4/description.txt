Архитектура решения для продажи ОСАГО основана на использовании Kafka как средства интеграции между сервисами. Это обеспечивает асинхронность, устойчивость к пиковым нагрузкам и возможность масштабирования. Вот основные элементы и детали реализации:
Основные компоненты:

    InsureTech Web (веб-приложение):
        Пользователь заполняет заявку на оформление ОСАГО.
        Заявка отправляется в Kafka-топик osago-create-request.
        Веб-приложение подписывается на топик osago-response для получения предложений от страховых компаний.

    core-app:
        Потребляет события из osago-create-request (заявки от пользователей).
        Публикует заявки в топик osago-aggregator-request для передачи в osago-aggregator.
        Потребляет ответы из osago-aggregator-response и публикует их в osago-response, чтобы отправить результаты пользователю.

    osago-aggregator:
        Потребляет заявки из топика osago-aggregator-request.
        Отправляет REST API-запросы в страховые компании для создания заявки и получения предложения.
        Публикует результаты в топик osago-aggregator-response.

    Kafka:
        Используется как шина данных для асинхронного взаимодействия между всеми компонентами.
        Обеспечивает обработку сообщений в порядке очереди, устойчивость к сбоям, а также возможность масштабирования потребителей.

    Системы страховых компаний:
        Предоставляют REST API для взаимодействия:
            Создание заявки.
            Получение предложения по заявке.
        Взаимодействие с ними происходит через osago-aggregator.

Средства отказоустойчивости:

    Rate Limiting:
        На уровне osago-aggregator для ограничения количества запросов к REST API страховых компаний.

    Circuit Breaker:
        Реализован на уровне osago-aggregator для предотвращения перегрузки при сбоях у страховых компаний.

    Retry:
        Автоматический повтор запросов в случае временных сбоев или недоступности страховой компании.

    Timeout:
        Ограничение ожидания ответа от страховых компаний (60 секунд).

Поток обработки:

    Создание заявки:
        Пользователь отправляет данные через веб-приложение.
        Заявка публикуется в топик osago-create-request.
        core-app обрабатывает заявку и публикует её в топик osago-aggregator-request.

    Получение предложений:
        osago-aggregator отправляет запросы в страховые компании.
        По мере получения ответов публикует результаты в топик osago-aggregator-response.
        core-app обрабатывает ответы и публикует их в топик osago-response.
        Веб-приложение получает ответы и отображает их пользователю.

Преимущества архитектуры:

    Масштабируемость:
        Kafka позволяет легко масштабировать обработку за счёт добавления новых экземпляров сервисов.
    Отказоустойчивость:
        Асинхронные взаимодействия через Kafka позволяют избежать проблем, связанных с недоступностью сервисов.
    Скорость отклика:
        Пользователь видит предложения от страховых компаний сразу по мере их поступления, без ожидания всех ответов.
    Гибкость:
        Легко добавлять новые страховые компании за счёт событийной модели взаимодействия.